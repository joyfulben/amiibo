{"ast":null,"code":"var _jsxFileName = \"/Users/benfisher/Desktop/examples/mern/frontend/src/App.js\";\nimport React from 'react';\nimport AmiiboHomepage from './components/AmiiboHomepage';\nlet baseURL = '';\n\nif (process.env.NODE_ENV === 'development') {\n  baseURL = 'http://localhost:3003';\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      amiiboExternal: [],\n      amiiboWishlist: [],\n      amiibo: null,\n      isHidden: false,\n      character: '',\n      gameSeries: '',\n      image: '',\n      type: ''\n    };\n    this.deleteAmiibo = this.deleteAmiibo.bind(this);\n    this.addToList = this.addToList.bind(this);\n    this.handleUpdateAmiibo = this.handleUpdateAmiibo.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleUpdateAmiibo(amiibo) {\n    const copyAmiibos = [amiibo, ...this.state.amiiboWishlist];\n    this.setState({\n      amiiboWishlist: copyAmiibos\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.currentTarget.id]: event.currentTarget.value\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n\n    try {\n      let response = await fetch('http://localhost:3003' + '/amiibos/' + event._id, {\n        method: 'PUT',\n        // Put, Delete. Only for a non-Get request\n        body: JSON.stringify({\n          character: this.state.character,\n          type: this.state.type\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      let updatedamiibo = await response.json();\n      const foundamiibo = this.state.amiiboWishlist.findIndex(foundItem => foundItem._id === event._id);\n      const copyAmiibo = [foundamiibo, ...this.state.amiiboWishlist];\n      this.setState({\n        amiiboWishlist: copyAmiibo\n      });\n    } catch (e) {\n      console.error({\n        'Error': e\n      });\n    }\n  }\n\n  async updateData(amiibo) {\n    console.log(amiibo);\n\n    try {\n      let response = await fetch(baseURL + '/amiibos/' + amiibo._id, {\n        method: 'PUT',\n        body: JSON.stringify(amiibo),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      let updatedamiibo = await response.json();\n      const foundamiibo = this.state.amiiboWishlist.findIndex(foundItem => foundItem._id === amiibo._id);\n      const copyAmiibo = [foundamiibo, ...this.state.amiiboWishlist];\n      this.setState({\n        amiiboWishlist: copyAmiibo\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async getAmiibos() {\n    try {\n      // INITIAL DATABASE PULL OF THE CUSTOM AMIIBOS\n      let response = await fetch(`${baseURL}/amiibos`);\n      let data = await response.json(); // PULLING FROM EXTERNAL API\n\n      let amiiboExternalApi = await fetch(`https://www.amiiboapi.com/api/amiibo/`);\n      let externalData = await amiiboExternalApi.json();\n      externalData = externalData.amiibo.slice(5, 40); // SETTING STATE OF THE AMIIBO ARRAYS\n\n      this.setState({\n        amiiboExternal: externalData,\n        amiiboWishlist: data\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async deleteAmiibo(id) {\n    try {\n      let response = await fetch(baseURL + '/amiibos/' + id, {\n        method: 'DELETE'\n      });\n      const foundAmiibo = this.state.amiiboWishlist.findIndex(amiibo => amiibo._id === id);\n      const copyAmiibo = [...this.state.amiiboWishlist];\n      copyAmiibo.splice(foundAmiibo, 1);\n      this.setState({\n        amiiboWishlist: copyAmiibo\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async addToList(i) {\n    try {\n      let response = await fetch(baseURL + '/amiibos', {\n        method: 'POST',\n        body: JSON.stringify({\n          character: this.state.amiiboExternal[i].character,\n          gameSeries: this.state.amiiboExternal[i].gameSeries,\n          image: this.state.amiiboExternal[i].image,\n          type: this.state.amiiboExternal[i].type\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      let data = await response.json();\n      const likedCharacter = [data, ...this.state.amiiboWishlist];\n      this.setState({\n        amiiboWishlist: likedCharacter,\n        character: '',\n        gameSeries: '',\n        image: '',\n        type: ''\n      });\n    } catch (e) {\n      console.error({\n        'Error': e\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.getAmiibos();\n  }\n\n  handleAddAmiibo(amiibo) {\n    const copyAmiibos = [amiibo, ...this.state.amiiboWishlist];\n    this.setState({\n      amiiboWishlist: copyAmiibos\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Welcome to \", React.createElement(\"img\", {\n      src: \"https://toppng.com/uploads/preview/amiibo-logo-11563072955fd60xvgciz.png\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), \" Wishlist!\"), React.createElement(AmiiboHomepage, {\n      mainList: this.state.amiiboExternal,\n      wishList: this.state.amiiboWishlist,\n      baseURL: baseURL,\n      add: this.addToList,\n      delete: this.deleteAmiibo,\n      update: this.handleUpdateAmiibo,\n      change: this.handleChange,\n      submit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"footer\", {\n      className: \"d-flex justify-content-between m-3 p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://www.nintendo.com/amiibo/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Amiibo Info\"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"MADE BY JAMAL AND BEN\"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Special thanks to \", React.createElement(\"a\", {\n      href: \"https://www.amiiboapi.com/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"AmiiboAPI\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/benfisher/Desktop/examples/mern/frontend/src/App.js"],"names":["React","AmiiboHomepage","baseURL","process","env","NODE_ENV","App","Component","constructor","props","state","amiiboExternal","amiiboWishlist","amiibo","isHidden","character","gameSeries","image","type","deleteAmiibo","bind","addToList","handleUpdateAmiibo","handleChange","handleSubmit","copyAmiibos","setState","event","currentTarget","id","value","preventDefault","response","fetch","_id","method","body","JSON","stringify","headers","updatedamiibo","json","foundamiibo","findIndex","foundItem","copyAmiibo","e","console","error","updateData","log","getAmiibos","data","amiiboExternalApi","externalData","slice","err","foundAmiibo","splice","i","likedCharacter","componentDidMount","handleAddAmiibo","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AmiiboHomepage from './components/AmiiboHomepage'\nlet baseURL = ''\nif (process.env.NODE_ENV === 'development') {\n  baseURL = 'http://localhost:3003'\n}\n  export default class App extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        amiiboExternal: [],\n        amiiboWishlist: [],\n        amiibo: null,\n        isHidden: false,\n        character: '',\n        gameSeries: '',\n        image: '',\n        type: '',\n      }\n      this.deleteAmiibo = this.deleteAmiibo.bind(this)\n      this.addToList = this.addToList.bind(this)\n      this.handleUpdateAmiibo = this.handleUpdateAmiibo.bind(this)\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n    handleUpdateAmiibo(amiibo) {\n      const copyAmiibos = [amiibo, ...this.state.amiiboWishlist]\n      this.setState({\n        amiiboWishlist: copyAmiibos\n      })\n    }\n    handleChange (event) {\n this.setState({ [event.currentTarget.id]: event.currentTarget.value})\n}\n  async handleSubmit (event) {\n  event.preventDefault()\n  try{\n    let response = await fetch('http://localhost:3003' + '/amiibos/' + event._id, {\n        method: 'PUT', // Put, Delete. Only for a non-Get request\n        body: JSON.stringify({character: this.state.character, type: this.state.type}),\n        headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n        let updatedamiibo = await response.json()\n        const foundamiibo = this.state.amiiboWishlist.findIndex(foundItem => foundItem._id === event._id)\n        const copyAmiibo = [foundamiibo, ...this.state.amiiboWishlist]\n        this.setState({amiiboWishlist: copyAmiibo})\n      }catch(e){\n        console.error({'Error': e})\n      }\n    }\n    async updateData (amiibo){\n  console.log(amiibo)\n  try{\n  let response = await fetch(baseURL + '/amiibos/' + amiibo._id, {\n    method: 'PUT',\n    body: JSON.stringify(amiibo),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n  let updatedamiibo = await response.json()\n  const foundamiibo = this.state.amiiboWishlist.findIndex(foundItem => foundItem._id === amiibo._id)\n  const copyAmiibo = [foundamiibo, ...this.state.amiiboWishlist]\n  this.setState({amiiboWishlist: copyAmiibo})\n  }catch(e){\n    console.error(e)\n  }\n}\n    async getAmiibos() {\n      try {\n        // INITIAL DATABASE PULL OF THE CUSTOM AMIIBOS\n        let response = await fetch(`${baseURL}/amiibos`)\n        let data = await response.json()\n        // PULLING FROM EXTERNAL API\n        let amiiboExternalApi = await fetch(`https://www.amiiboapi.com/api/amiibo/`)\n        let externalData = await amiiboExternalApi.json()\n        externalData = externalData.amiibo.slice(5, 40)\n        // SETTING STATE OF THE AMIIBO ARRAYS\n        this.setState({amiiboExternal: externalData, amiiboWishlist: data})\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n\n    async deleteAmiibo (id){\n   try {\n   let response = await fetch(baseURL + '/amiibos/' +  id, {\n      method: 'DELETE'\n      })\n      const foundAmiibo = this.state.amiiboWishlist.findIndex(amiibo => amiibo._id === id)\n      const copyAmiibo = [...this.state.amiiboWishlist]\n      copyAmiibo.splice(foundAmiibo, 1)\n      this.setState({amiiboWishlist: copyAmiibo})\n   } catch(e){\n     console.error(e)\n   }\n }\n    async addToList (i) {\n      try{\n        let response = await fetch(baseURL + '/amiibos', {\n          method: 'POST',\n          body: JSON.stringify({\n            character: this.state.amiiboExternal[i].character,\n            gameSeries: this.state.amiiboExternal[i].gameSeries,\n            image: this.state.amiiboExternal[i].image,\n            type: this.state.amiiboExternal[i].type\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n        let data = await response.json()\n        const likedCharacter = [data, ...this.state.amiiboWishlist]\n        this.setState({\n          amiiboWishlist: likedCharacter,\n          character: '',\n          gameSeries: '',\n          image: '',\n          type: ''\n        })\n      }catch(e){\n        console.error({'Error': e})\n      }\n    }\n    componentDidMount(){\n      this.getAmiibos()\n    }\n    handleAddAmiibo(amiibo) {\n      const copyAmiibos = [amiibo, ...this.state.amiiboWishlist]\n      this.setState({\n        amiiboWishlist: copyAmiibos\n      })\n    }\n    render(){\n      return(\n        <>\n        <h1>Welcome to <img src=\"https://toppng.com/uploads/preview/amiibo-logo-11563072955fd60xvgciz.png\" alt=''/> Wishlist!</h1>\n          <AmiiboHomepage mainList={this.state.amiiboExternal} wishList={this.state.amiiboWishlist}\n          baseURL={baseURL}\n          add={this.addToList}\n          delete={this.deleteAmiibo}\n          update={this.handleUpdateAmiibo}\n          change={this.handleChange}\n          submit={this.handleSubmit}\n          />\n        <footer className=\"d-flex justify-content-between m-3 p-3\">\n          <a href=\"https://www.nintendo.com/amiibo/\">Amiibo Info</a>\n          <h6>MADE BY JAMAL AND BEN</h6>\n          <h6>Special thanks to <a href=\"https://www.amiiboapi.com/\">AmiiboAPI</a></h6>\n        </footer>\n         </>\n      )\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}