{"ast":null,"code":"var _jsxFileName = \"/Users/benfisher/Desktop/examples/mern/frontend/src/App.js\";\nimport React from 'react';\nimport amiiboImage from './amiiboImage.png';\nimport backgroundImage from './tester.jpeg';\nimport AmiiboHomepage from './components/AmiiboHomepage';\nlet baseURL = '';\n\nif (process.env.NODE_ENV === 'development') {\n  baseURL = 'http://localhost:3003';\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      amiiboExternal: [],\n      amiiboWishlist: [],\n      amiibo: null,\n      isHidden: false,\n      showEdit: false,\n      character: '',\n      gameSeries: '',\n      image: '',\n      type: '',\n      id: ''\n    };\n    this.deleteAmiibo = this.deleteAmiibo.bind(this);\n    this.addToList = this.addToList.bind(this);\n    this.handleUpdateAmiibo = this.handleUpdateAmiibo.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAddAmiibo = this.handleAddAmiibo.bind(this);\n    this.toggleView = this.toggleView.bind(this);\n    this.amiiboSniffer = this.amiiboSniffer.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAmiibos();\n  }\n\n  amiiboSniffer(amiibo) {\n    this.setState({\n      amiibo: amiibo\n    });\n  }\n\n  handleUpdateAmiibo(amiibo) {\n    const copyAmiibos = [amiibo, ...this.state.amiiboWishlist];\n    this.setState({\n      amiiboWishlist: copyAmiibos\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.currentTarget.id]: event.currentTarget.value\n    });\n  }\n\n  handleAddAmiibo(amiiboEdit) {\n    try {\n      let testId = amiiboEdit._id;\n      let copyAmiibo = [...this.state.amiiboWishlist];\n      const foundAmiibo = copyAmiibo.findIndex(foundAmiibo => foundAmiibo._id === testId);\n      copyAmiibo[foundAmiibo].character = amiiboEdit.character;\n      copyAmiibo[foundAmiibo].type = amiiboEdit.type;\n      this.setState({\n        amiiboWishlist: copyAmiibo\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async getAmiibos() {\n    try {\n      // INITIAL DATABASE PULL OF THE CUSTOM AMIIBOS\n      let response = await fetch(`${baseURL}/amiibos`);\n      let data = await response.json(); // PULLING FROM EXTERNAL API\n\n      let amiiboExternalApi = await fetch(`https://www.amiiboapi.com/api/amiibo/`);\n      let externalData = await amiiboExternalApi.json();\n      externalData = externalData.amiibo.slice(5, 40); // SETTING STATE OF THE AMIIBO ARRAYS\n\n      this.setState({\n        amiiboExternal: externalData,\n        amiiboWishlist: data\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async deleteAmiibo(id) {\n    try {\n      let response = await fetch(baseURL + '/amiibos/' + id, {\n        method: 'DELETE'\n      });\n      const foundAmiibo = this.state.amiiboWishlist.findIndex(amiibo => amiibo._id === id);\n      const copyAmiibo = [...this.state.amiiboWishlist];\n      copyAmiibo.splice(foundAmiibo, 1);\n      this.setState({\n        amiiboWishlist: copyAmiibo\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async addToList(i) {\n    try {\n      let response = await fetch(baseURL + '/amiibos', {\n        method: 'POST',\n        body: JSON.stringify({\n          character: this.state.amiiboExternal[i].character,\n          gameSeries: this.state.amiiboExternal[i].gameSeries,\n          image: this.state.amiiboExternal[i].image,\n          type: this.state.amiiboExternal[i].type\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      let data = await response.json();\n      const likedCharacter = [data, ...this.state.amiiboWishlist];\n      this.setState({\n        amiiboWishlist: likedCharacter,\n        character: '',\n        gameSeries: '',\n        image: '',\n        type: ''\n      });\n    } catch (e) {\n      console.error({\n        'Error': e\n      });\n    }\n  }\n\n  async toggleView() {\n    try {\n      this.setState({\n        isHidden: !this.state.isHidden\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Welcome to \", React.createElement(\"img\", {\n      src: amiiboImage,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), \" Wishlist!\"), React.createElement(AmiiboHomepage, {\n      mainList: this.state.amiiboExternal,\n      wishList: this.state.amiiboWishlist,\n      baseURL: baseURL,\n      add: this.addToList,\n      delete: this.deleteAmiibo,\n      update: this.handleUpdateAmiibo,\n      change: this.handleChange,\n      submit: this.handleSubmit,\n      handleAddAmiibo: this.handleAddAmiibo,\n      character: this.state.character,\n      type: this.state.type,\n      toggleView: this.toggleView,\n      isHidden: this.state.isHidden,\n      amiiboShower: this.state.amiibo,\n      amiiboSniffer: this.amiiboSniffer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"footer\", {\n      className: \"d-flex justify-content-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://www.nintendo.com/amiibo/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Amiibo Info\"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"MADE BY JAMAL AND BEN\"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Special thanks to \", React.createElement(\"a\", {\n      href: \"https://www.amiiboapi.com/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"AmiiboAPI\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/benfisher/Desktop/examples/mern/frontend/src/App.js"],"names":["React","amiiboImage","backgroundImage","AmiiboHomepage","baseURL","process","env","NODE_ENV","App","Component","constructor","props","state","amiiboExternal","amiiboWishlist","amiibo","isHidden","showEdit","character","gameSeries","image","type","id","deleteAmiibo","bind","addToList","handleUpdateAmiibo","handleChange","handleAddAmiibo","toggleView","amiiboSniffer","componentDidMount","getAmiibos","setState","copyAmiibos","event","currentTarget","value","amiiboEdit","testId","_id","copyAmiibo","foundAmiibo","findIndex","e","console","error","response","fetch","data","json","amiiboExternalApi","externalData","slice","err","method","splice","i","body","JSON","stringify","headers","likedCharacter","render","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport amiiboImage from './amiiboImage.png';\nimport backgroundImage from './tester.jpeg'\nimport AmiiboHomepage from './components/AmiiboHomepage'\nlet baseURL = ''\n\nif (process.env.NODE_ENV === 'development') {\n  baseURL = 'http://localhost:3003'\n}\n\n  export default class App extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        amiiboExternal: [],\n        amiiboWishlist: [],\n        amiibo: null,\n        isHidden: false,\n        showEdit: false,\n        character: '',\n        gameSeries: '',\n        image: '',\n        type: '',\n        id: ''\n      }\n      this.deleteAmiibo = this.deleteAmiibo.bind(this)\n      this.addToList = this.addToList.bind(this)\n      this.handleUpdateAmiibo = this.handleUpdateAmiibo.bind(this)\n      this.handleChange = this.handleChange.bind(this)\n      this.handleAddAmiibo = this.handleAddAmiibo.bind(this)\n      this.toggleView = this.toggleView.bind(this)\n      this.amiiboSniffer = this.amiiboSniffer.bind(this)\n    }\n    componentDidMount(){\n      this.getAmiibos()\n    }\n    amiiboSniffer(amiibo){\n      this.setState({amiibo: amiibo})\n    }\n    handleUpdateAmiibo(amiibo) {\n      const copyAmiibos = [amiibo, ...this.state.amiiboWishlist]\n      this.setState({\n        amiiboWishlist: copyAmiibos\n      })\n    }\n    handleChange (event) {\n this.setState({ [event.currentTarget.id]: event.currentTarget.value})\n}\nhandleAddAmiibo(amiiboEdit) {\n  try{\n  let testId = amiiboEdit._id\n        let copyAmiibo = [...this.state.amiiboWishlist]\n  const foundAmiibo = copyAmiibo.findIndex(foundAmiibo => foundAmiibo._id === testId)\n\n  copyAmiibo[foundAmiibo].character = amiiboEdit.character\n  copyAmiibo[foundAmiibo].type = amiiboEdit.type\n  this.setState({amiiboWishlist: copyAmiibo})\n} catch(e){\n  console.error(e);\n}\n\n}\n\n\n    async getAmiibos() {\n      try {\n        // INITIAL DATABASE PULL OF THE CUSTOM AMIIBOS\n        let response = await fetch(`${baseURL}/amiibos`)\n        let data = await response.json()\n        // PULLING FROM EXTERNAL API\n        let amiiboExternalApi = await fetch(`https://www.amiiboapi.com/api/amiibo/`)\n        let externalData = await amiiboExternalApi.json()\n        externalData = externalData.amiibo.slice(5, 40)\n        // SETTING STATE OF THE AMIIBO ARRAYS\n        this.setState({amiiboExternal: externalData, amiiboWishlist: data})\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n\n    async deleteAmiibo (id){\n   try {\n   let response = await fetch(baseURL + '/amiibos/' +  id, {\n      method: 'DELETE'\n      })\n      const foundAmiibo = this.state.amiiboWishlist.findIndex(amiibo => amiibo._id === id)\n      const copyAmiibo = [...this.state.amiiboWishlist]\n      copyAmiibo.splice(foundAmiibo, 1)\n      this.setState({amiiboWishlist: copyAmiibo})\n   } catch(e){\n     console.error(e)\n   }\n }\n    async addToList (i) {\n      try{\n        let response = await fetch(baseURL + '/amiibos', {\n          method: 'POST',\n          body: JSON.stringify({\n            character: this.state.amiiboExternal[i].character,\n            gameSeries: this.state.amiiboExternal[i].gameSeries,\n            image: this.state.amiiboExternal[i].image,\n            type: this.state.amiiboExternal[i].type\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n        let data = await response.json()\n        const likedCharacter = [data, ...this.state.amiiboWishlist]\n        this.setState({\n          amiiboWishlist: likedCharacter,\n          character: '',\n          gameSeries: '',\n          image: '',\n          type: ''\n        })\n      }catch(e){\n        console.error({'Error': e})\n      }\n    }\n\n    async toggleView(){\n      try{\n        this.setState({isHidden: !this.state.isHidden})\n      }catch(e){\n        console.error(e);\n      }\n    }\n\n    render(){\n      return(\n        <>\n        <h1>Welcome to <img src={amiiboImage} alt=''/> Wishlist!</h1>\n          <AmiiboHomepage mainList={this.state.amiiboExternal} wishList={this.state.amiiboWishlist}\n          baseURL={baseURL}\n          add={this.addToList}\n          delete={this.deleteAmiibo}\n          update={this.handleUpdateAmiibo}\n          change={this.handleChange}\n          submit={this.handleSubmit}\n          handleAddAmiibo={this.handleAddAmiibo}\n          character={this.state.character}\n          type={this.state.type}\n          toggleView={this.toggleView}\n          isHidden={this.state.isHidden}\n          amiiboShower={this.state.amiibo}\n          amiiboSniffer={this.amiiboSniffer}\n\n          />\n        <footer className=\"d-flex justify-content-between\">\n          <a href=\"https://www.nintendo.com/amiibo/\">Amiibo Info</a>\n          <h6>MADE BY JAMAL AND BEN</h6>\n          <h6>Special thanks to <a href=\"https://www.amiiboapi.com/\">AmiiboAPI</a></h6>\n        </footer>\n         </>\n      )\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}